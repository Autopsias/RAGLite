# CI/CD Workflow - Auto-generated by workflow-installer
# Generated on: 2025-10-04 14:13:58
# Configuration profile: advanced
# Language: python

name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quality checks (linting, type checking, security)
  quality:
    name: Code Quality & Security
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: self-hosted-${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
          restore-keys: |
            self-hosted-${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-xdist
          pip install bandit
          pip install ruff mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

      - name: Linting (Ruff)
        run: ruff check . --output-format=github

      - name: Type checking (MyPy)
        run: mypy . --show-error-codes


      - name: Security scan
        run: |
          bandit -r . -f json -o bandit-report.json || true
  # Test matrix with parallel execution
  test-matrix:
    name: Tests - ${{ matrix.test-suite }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        test-suite: ["unit", "integration", "e2e", "api", "database", "performance"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: self-hosted-${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
          restore-keys: |
            self-hosted-${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-xdist
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

      - name: Run tests
        run: |
          pytest tests/${{ matrix.test-suite }}/ \
            -n 4 \
            --dist worksteal \
            --cov=src \
            --cov-report=xml \
            --cov-report=term \
            -v

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.test-suite }}
          path: coverage.xml
          retention-days: 1


  # Deployment (only on main branch)
  deploy:
    name: Deploy to Production
    needs: [quality, test-matrix]
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy
        id: deploy
        run: |
          echo "Deployment steps go here"
          # Add your deployment commands
